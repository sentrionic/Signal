{
  "openapi": "3.0.0",
  "paths": {
    "/api/accounts": {
      "post": {
        "operationId": "UsersController_register",
        "summary": "Register Account",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Newly Created User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldError"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User Operation"
        ]
      },
      "get": {
        "operationId": "UsersController_getCurrent",
        "summary": "Get Current User",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "tags": [
          "User Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      },
      "put": {
        "operationId": "UsersController_updateAccount",
        "summary": "Update Current User",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldError"
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "tags": [
          "User Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/accounts/login": {
      "post": {
        "operationId": "UsersController_login",
        "summary": "User Login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Current User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        },
        "tags": [
          "User Operation"
        ]
      }
    },
    "/api/accounts/logout": {
      "post": {
        "operationId": "UsersController_logout",
        "summary": "User Logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "User Operation"
        ]
      }
    },
    "/api/requests": {
      "get": {
        "operationId": "FriendsController_getRequests",
        "summary": "Get current user's requests",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Friend Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      },
      "post": {
        "operationId": "FriendsController_addRequest",
        "summary": "Send friend request",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Username"
          }
        },
        "tags": [
          "Friend Operation"
        ]
      }
    },
    "/api/requests/{id}/accept": {
      "post": {
        "operationId": "FriendsController_acceptRequest",
        "summary": "Accept Friend Request",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "Friend Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/requests/{id}/remove": {
      "post": {
        "operationId": "FriendsController_removeRequest",
        "summary": "Remove Friend Request",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "Friend Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/friends": {
      "get": {
        "operationId": "FriendsController_getFriends",
        "summary": "Get current user's friends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of friends",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Friend Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/friends/{id}": {
      "delete": {
        "operationId": "FriendsController_removeFriend",
        "summary": "Remove Friend",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "Friend Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/chats": {
      "get": {
        "operationId": "ChatsController_getChats",
        "summary": "Get current user's chats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of chats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chat Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      },
      "post": {
        "operationId": "ChatsController_getOrCreateChat",
        "summary": "Get an existing chat or create a new one",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Newly created chat",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Chat Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/groups": {
      "post": {
        "operationId": "GroupsController_createGroup",
        "summary": "Create Group",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Newly created group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Group Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/groups/{chatId}": {
      "post": {
        "operationId": "GroupsController_addUser",
        "summary": "Add User",
        "parameters": [
          {
            "name": "chatId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "Group Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      },
      "delete": {
        "operationId": "GroupsController_leaveGroup",
        "summary": "Leave Group",
        "parameters": [
          {
            "name": "chatId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": [
          "Group Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/messages/{chatId}": {
      "get": {
        "operationId": "MessagesController_getChatMessages",
        "summary": "Get Chat Messages",
        "parameters": [
          {
            "name": "chatId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "tags": [
          "Message Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      },
      "post": {
        "operationId": "MessagesController_createChatMessage",
        "summary": "Send Message to Chat",
        "parameters": [
          {
            "name": "chatId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "tags": [
          "Message Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    },
    "/api/messages/{messageId}": {
      "put": {
        "operationId": "MessagesController_editMessage",
        "summary": "Edit Message",
        "parameters": [
          {
            "name": "messageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edit Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "tags": [
          "Message Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      },
      "delete": {
        "operationId": "MessagesController_deleteMessage",
        "summary": "Delete Message",
        "parameters": [
          {
            "name": "messageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "tags": [
          "Message Operation"
        ],
        "security": [
          {
            "cookie": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Signal API",
    "description": "The API for the Signal stack",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "RegisterInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Unique. Must be a valid email."
          },
          "password": {
            "type": "string",
            "description": "Min 6, max 150 characters."
          },
          "displayName": {
            "type": "string",
            "description": "Min 3, max 30 characters."
          }
        },
        "required": [
          "email",
          "password",
          "displayName"
        ]
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "username",
          "displayName",
          "image",
          "bio"
        ]
      },
      "FieldError": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "field",
          "message"
        ]
      },
      "LoginInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Unique. Must be a valid email."
          },
          "password": {
            "type": "string",
            "description": "Min 6, max 150 characters."
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UpdateUserInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Unique. Must be a valid email."
          },
          "displayName": {
            "type": "string",
            "description": "Min 3, max 30 characters."
          },
          "bio": {
            "type": "string",
            "description": "At most 200 characters."
          }
        },
        "required": [
          "email",
          "displayName",
          "bio"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "lastOnline": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username",
          "displayName",
          "image",
          "bio",
          "lastOnline"
        ]
      },
      "Request Type": {
        "type": "string",
        "enum": [
          "INCOMING",
          "OUTGOING"
        ]
      },
      "RequestResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "type": {
            "$ref": "#/components/schemas/Request Type"
          }
        },
        "required": [
          "user",
          "type"
        ]
      },
      "AddRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "GroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "memberCount": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "image",
          "createdAt",
          "memberCount"
        ]
      },
      "AttachmentResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "filetype": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "filetype",
          "filename"
        ]
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "IMAGE",
              "VIDEO",
              "AUDIO"
            ]
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "attachment": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AttachmentResponse"
              }
            ]
          },
          "sentAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deliveredAt": {
            "type": "string",
            "nullable": true
          },
          "seenAt": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "type",
          "text",
          "user",
          "attachment",
          "sentAt",
          "updatedAt",
          "deliveredAt",
          "seenAt"
        ]
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "GROUP CHAT",
              "DIRECT CHAT"
            ]
          },
          "user": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserResponse"
              }
            ]
          },
          "group": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupResponse"
              }
            ]
          },
          "lastMessage": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/MessageResponse"
              }
            ]
          },
          "hasNotification": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "type",
          "user",
          "group",
          "lastMessage",
          "hasNotification"
        ]
      },
      "ChatDto": {
        "type": "object",
        "properties": {
          "contactID": {
            "type": "string"
          }
        },
        "required": [
          "contactID"
        ]
      },
      "CreateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "ids"
        ]
      },
      "AddUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "CreateMessageDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true,
            "description": "The message. Either this or the file must not be null"
          },
          "file": {
            "type": "string",
            "nullable": true,
            "format": "binary"
          }
        }
      },
      "UpdateMessageDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The new message."
          }
        },
        "required": [
          "text"
        ]
      }
    }
  }
}